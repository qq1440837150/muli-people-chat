<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.GroupUserRelativeMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.GroupUserRelative">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="power" jdbcType="INTEGER" property="power" />
  </resultMap>
  <sql id="Base_Column_List">
    id, group_id, user_id, power
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_user_relative
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByGroupIdAndUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_user_relative
    where group_id=#{groupId} and user_id=#{userId}
  </select>
  <select id="selectByGroupId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_user_relative
    where group_id=#{groupId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from group_user_relative
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByGroupIdAndUserId">
    delete from group_user_relative
    where group_id=#{groupId} and user_id=#{userId}
  </delete>
  <delete id="deleteByGroupId" parameterType="java.lang.Integer">
    delete from group_user_relative
    where group_id=#{groupId}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.GroupUserRelative">
    insert into group_user_relative (id, group_id, user_id, 
      power)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{power,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.GroupUserRelative">
    insert into group_user_relative
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="power != null">
        power,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        #{power,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.GroupUserRelative">
    update group_user_relative
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        power = #{power,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.GroupUserRelative">
    update group_user_relative
    set group_id = #{groupId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      power = #{power,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByGroupIdAndUserId" parameterType="com.example.demo.domain.GroupUserRelative">
    update group_user_relative
    set power = #{power,jdbcType=INTEGER}
    where group_id=#{groupId} and user_id=#{userId}
  </update>
</mapper>