<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.GroupInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.GroupInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_password" jdbcType="BIT" property="isPassword" />
  </resultMap>
  <sql id="Base_Column_List">
    id, group_id, password, is_password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByIsPassword" parameterType="java.lang.Boolean" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_info
    where is_password=#{isPassword}
  </select>
  <select id="selectByGroupId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_info
    where group_id=#{groupId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from group_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByGroupId" parameterType="java.lang.Integer">
    delete from group_info
    where group_id=#{groupId}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.GroupInfo">
    insert into group_info (id, group_id, password, 
      is_password)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{isPassword,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.GroupInfo">
    insert into group_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="isPassword != null">
        is_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isPassword != null">
        #{isPassword,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.GroupInfo">
    update group_info
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isPassword != null">
        is_password = #{isPassword,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.GroupInfo">
    update group_info
    set group_id = #{groupId,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      is_password = #{isPassword,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByGroupId" parameterType="com.example.demo.domain.GroupInfo">
    update group_info
    set group_id = #{groupId,jdbcType=INTEGER},
        password = #{password,jdbcType=VARCHAR},
        is_password = #{isPassword,jdbcType=BIT}
    where group_id=#{groupId}
  </update>
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select g.id,g.group_id,g.password,g.is_password from group_info as g inner join group_user_relative on g.group_id = group_user_relative.group_id where user_id=#{userId};
  </select>
</mapper>